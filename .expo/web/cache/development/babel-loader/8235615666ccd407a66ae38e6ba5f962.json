{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _auth = _interopRequireDefault(require(\"@react-native-firebase/auth\"));\n\nvar _reactNativeToastMessage = _interopRequireWildcard(require(\"react-native-toast-message\"));\n\nvar _LoginStyle = _interopRequireDefault(require(\"./LoginStyle\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\TechTeam\\\\TodoListiOS\\\\Login\\\\Login.js\";\n\nvar toastConfig = {\n  error: function error(_ref) {\n    var text1 = _ref.text1,\n        text2 = _ref.text2,\n        props = _ref.props,\n        rest = (0, _objectWithoutProperties2.default)(_ref, [\"text1\", \"text2\", \"props\"]);\n    return _react.default.createElement(_reactNativeToastMessage.BaseToast, (0, _extends2.default)({}, rest, {\n      style: {\n        borderLeftColor: 'pink'\n      },\n      contentContainerStyle: {\n        paddingHorizontal: 15\n      },\n      text1Style: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        fontFamily: 'Arial'\n      },\n      text2Style: {\n        fontSize: 9,\n        fontWeight: 'bold',\n        fontFamily: 'Arial'\n      },\n      text1: text1,\n      text2: text2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nfunction Login(_ref2) {\n  var _this2 = this;\n\n  var navigation = _ref2.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  handleLogin = function handleLogin() {\n    (0, _auth.default)().signInWithEmailAndPassword(email, password).then(function () {\n      _this2.props.navigation.navigate('Home');\n    }).catch(function (error) {\n      console.log(String(error));\n\n      _reactNativeToastMessage.default.show({\n        type: 'error',\n        text1: 'Login Failed',\n        text2: String(error),\n        position: 'bottom',\n        autoHide: true\n      });\n    });\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: styles.logo,\n    source: require(\"../resources/startScreen.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputBox,\n    value: email,\n    onChangeText: function onChangeText(event) {\n      return setEmail(event);\n    },\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputBox,\n    value: password,\n    onChangeText: function onChangeText(event) {\n      return setPassword(event);\n    },\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.button,\n    onPress: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Login\")), _react.default.createElement(_reactNativeToastMessage.default, {\n    config: toastConfig,\n    ref: function ref(_ref3) {\n      return _reactNativeToastMessage.default.setRef(_ref3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["D:/TechTeam/TodoListiOS/Login/Login.js"],"names":["toastConfig","error","text1","text2","props","rest","borderLeftColor","paddingHorizontal","fontSize","fontWeight","fontFamily","Login","navigation","email","setEmail","password","setPassword","handleLogin","signInWithEmailAndPassword","then","navigate","catch","console","log","String","Toast","show","type","position","autoHide","styles","container","logo","require","inputBox","event","button","buttonText","ref","setRef"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {Image, View, Text ,StyleSheet,TextInput,TouchableOpacity,Button} from 'react-native';\r\nimport auth from '@react-native-firebase/auth';\r\nimport Toast, {BaseToast} from 'react-native-toast-message';\r\nimport LoginStyle from './LoginStyle';\r\n\r\nconst toastConfig = {\r\n    error: ({text1, text2, props, ...rest}) => (\r\n        <BaseToast\r\n        {...rest}\r\n        style={{ borderLeftColor: 'pink' }}\r\n        contentContainerStyle={{ paddingHorizontal: 15 }}\r\n        text1Style={{\r\n          fontSize: 15,\r\n          fontWeight: 'bold',\r\n          fontFamily:'Arial'\r\n        }}\r\n        text2Style={{\r\n            fontSize: 9,\r\n          fontWeight: 'bold',\r\n          fontFamily:'Arial'\r\n        }}\r\n        text1={text1}\r\n        text2={text2}\r\n      />\r\n        )\r\n  }\r\n  \r\n\r\nexport default function Login({navigation}) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n\r\n  handleLogin = () =>{\r\n    auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n           this.props.navigation.navigate('Home');\r\n        })\r\n        .catch(error  => { \r\n            console.log(String(error));\r\n            Toast.show({\r\n                type:'error',\r\n                text1: 'Login Failed',\r\n                text2:String(error),\r\n                position:'bottom',\r\n                autoHide:true\r\n              });\r\n        });\r\n    }\r\n\r\n  return(\r\n    <View style={styles.container}>\r\n                  <Image style={styles.logo} source={require(\"../resources/startScreen.png\")}/>\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={email}\r\n                    onChangeText={event => setEmail(event)}\r\n                    placeholder='Email'\r\n                    autoCapitalize='none'\r\n                />\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={password}\r\n                    onChangeText={event => setPassword(event)}\r\n                    placeholder='Password'\r\n                    secureTextEntry={true}\r\n                />\r\n                <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n                    <Text style={styles.buttonText}>Login</Text>\r\n                </TouchableOpacity>\r\n                <Toast config={toastConfig} ref={(ref) => Toast.setRef(ref)} />\r\n            </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}