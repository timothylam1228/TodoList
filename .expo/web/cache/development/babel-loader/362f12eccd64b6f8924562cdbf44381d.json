{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _common = require(\"../../lib/common\");\n\nvar _internal = require(\"../../lib/internal\");\n\nvar _UtilsStatics = _interopRequireDefault(require(\"./UtilsStatics\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar namespace = 'utils';\nvar statics = _UtilsStatics.default;\nvar nativeModuleName = 'RNFBUtilsModule';\n\nvar FirebaseUtilsModule = function (_FirebaseModule) {\n  (0, _inherits2.default)(FirebaseUtilsModule, _FirebaseModule);\n\n  var _super = _createSuper(FirebaseUtilsModule);\n\n  function FirebaseUtilsModule() {\n    (0, _classCallCheck2.default)(this, FirebaseUtilsModule);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(FirebaseUtilsModule, [{\n    key: \"isRunningInTestLab\",\n    get: function get() {\n      if (_common.isIOS) {\n        return false;\n      }\n\n      return this.native.isRunningInTestLab;\n    }\n  }, {\n    key: \"playServicesAvailability\",\n    get: function get() {\n      if (_common.isIOS) {\n        return {\n          isAvailable: true,\n          status: 0\n        };\n      }\n\n      return this.native.androidPlayServices;\n    }\n  }, {\n    key: \"getPlayServicesStatus\",\n    value: function getPlayServicesStatus() {\n      if (_common.isIOS) {\n        return Promise.resolve({\n          isAvailable: true,\n          status: 0\n        });\n      }\n\n      return this.native.androidGetPlayServicesStatus();\n    }\n  }, {\n    key: \"promptForPlayServices\",\n    value: function promptForPlayServices() {\n      if (_common.isIOS) {\n        return Promise.resolve();\n      }\n\n      return this.native.androidPromptForPlayServices();\n    }\n  }, {\n    key: \"makePlayServicesAvailable\",\n    value: function makePlayServicesAvailable() {\n      if (_common.isIOS) {\n        return Promise.resolve();\n      }\n\n      return this.native.androidMakePlayServicesAvailable();\n    }\n  }, {\n    key: \"resolutionForPlayServices\",\n    value: function resolutionForPlayServices() {\n      if (_common.isIOS) {\n        return Promise.resolve();\n      }\n\n      return this.native.androidResolutionForPlayServices();\n    }\n  }, {\n    key: \"logInfo\",\n    value: function logInfo() {\n      var _logger;\n\n      return (_logger = logger).logInfo.apply(_logger, arguments);\n    }\n  }]);\n  return FirebaseUtilsModule;\n}(_internal.FirebaseModule);\n\nvar _default = (0, _internal.createModuleNamespace)({\n  statics: statics,\n  version: _UtilsStatics.default.SDK_VERSION,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: false,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseUtilsModule\n});\n\nexports.default = _default;","map":{"version":3,"sources":["D:/TechTeam/TodoListiOS/node_modules/@react-native-firebase/app/lib/utils/index.js"],"names":["namespace","statics","UtilsStatics","nativeModuleName","FirebaseUtilsModule","isIOS","native","isRunningInTestLab","isAvailable","status","androidPlayServices","Promise","resolve","androidGetPlayServicesStatus","androidPromptForPlayServices","androidMakePlayServicesAvailable","androidResolutionForPlayServices","logger","logInfo","FirebaseModule","version","SDK_VERSION","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass"],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AACA;;AACA;;;;;;AAEA,IAAMA,SAAS,GAAG,OAAlB;AACA,IAAMC,OAAO,GAAGC,qBAAhB;AACA,IAAMC,gBAAgB,GAAG,iBAAzB;;IAEMC,mB;;;;;;;;;;;;SACJ,eAAyB;AACvB,UAAIC,aAAJ,EAAW;AACT,eAAO,KAAP;AACD;;AACD,aAAO,KAAKC,MAAL,CAAYC,kBAAnB;AACD;;;SAED,eAA+B;AAC7B,UAAIF,aAAJ,EAAW;AACT,eAAO;AACLG,UAAAA,WAAW,EAAE,IADR;AAELC,UAAAA,MAAM,EAAE;AAFH,SAAP;AAID;;AACD,aAAO,KAAKH,MAAL,CAAYI,mBAAnB;AACD;;;WAED,iCAAwB;AACtB,UAAIL,aAAJ,EAAW;AACT,eAAOM,OAAO,CAACC,OAAR,CAAgB;AACrBJ,UAAAA,WAAW,EAAE,IADQ;AAErBC,UAAAA,MAAM,EAAE;AAFa,SAAhB,CAAP;AAID;;AACD,aAAO,KAAKH,MAAL,CAAYO,4BAAZ,EAAP;AACD;;;WAED,iCAAwB;AACtB,UAAIR,aAAJ,EAAW;AACT,eAAOM,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,aAAO,KAAKN,MAAL,CAAYQ,4BAAZ,EAAP;AACD;;;WAED,qCAA4B;AAC1B,UAAIT,aAAJ,EAAW;AACT,eAAOM,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,aAAO,KAAKN,MAAL,CAAYS,gCAAZ,EAAP;AACD;;;WAED,qCAA4B;AAC1B,UAAIV,aAAJ,EAAW;AACT,eAAOM,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,aAAO,KAAKN,MAAL,CAAYU,gCAAZ,EAAP;AACD;;;WAED,mBAAiB;AAAA;;AACf,aAAO,WAAAC,MAAM,EAACC,OAAP,0BAAP;AACD;;;EAnD+BC,wB;;eAwDnB,qCAAsB;AACnClB,EAAAA,OAAO,EAAPA,OADmC;AAEnCmB,EAAAA,OAAO,EAAElB,sBAAamB,WAFa;AAGnCrB,EAAAA,SAAS,EAATA,SAHmC;AAInCG,EAAAA,gBAAgB,EAAhBA,gBAJmC;AAKnCmB,EAAAA,YAAY,EAAE,KALqB;AAMnCC,EAAAA,kBAAkB,EAAE,KANe;AAOnCC,EAAAA,2BAA2B,EAAE,KAPM;AAQnCC,EAAAA,WAAW,EAAErB;AARsB,CAAtB,C","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isIOS } from '../../lib/common';\nimport { createModuleNamespace, FirebaseModule } from '../../lib/internal';\nimport UtilsStatics from './UtilsStatics';\n\nconst namespace = 'utils';\nconst statics = UtilsStatics;\nconst nativeModuleName = 'RNFBUtilsModule';\n\nclass FirebaseUtilsModule extends FirebaseModule {\n  get isRunningInTestLab() {\n    if (isIOS) {\n      return false;\n    }\n    return this.native.isRunningInTestLab;\n  }\n\n  get playServicesAvailability() {\n    if (isIOS) {\n      return {\n        isAvailable: true,\n        status: 0,\n      };\n    }\n    return this.native.androidPlayServices;\n  }\n\n  getPlayServicesStatus() {\n    if (isIOS) {\n      return Promise.resolve({\n        isAvailable: true,\n        status: 0,\n      });\n    }\n    return this.native.androidGetPlayServicesStatus();\n  }\n\n  promptForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidPromptForPlayServices();\n  }\n\n  makePlayServicesAvailable() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidMakePlayServicesAvailable();\n  }\n\n  resolutionForPlayServices() {\n    if (isIOS) {\n      return Promise.resolve();\n    }\n    return this.native.androidResolutionForPlayServices();\n  }\n\n  logInfo(...args) {\n    return logger.logInfo(...args);\n  }\n}\n\n// import { utils } from '@react-native-firebase/app';\n// utils().X(...);\nexport default createModuleNamespace({\n  statics,\n  version: UtilsStatics.SDK_VERSION,\n  namespace,\n  nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: false,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseUtilsModule,\n});\n"]},"metadata":{},"sourceType":"script"}